pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
-- main
-- The loop
game_objects = {}
animator = {}
animations = {}
animated_objects = {}
add(game_objects, animator)
actions = {}

player_list = {
	player1 = nil,
	player2 = nil
}

function _init()
	-- music
	music(0)

	-- fix transparency, we want to use black as a colour and make pink transparent
	palt(black, false) 
	palt(pink, true) 

	init_animations()

	foreach(game_objects, 
	function(go) 
		if go.init != nil then
			go:init()
		end
	end)

	next_room()
end

function _update()
	foreach(game_objects, 
	function(go) 
		if go.update != nil then
			go:update()
		end
	end)

	foreach(actions, 
	function(c)
		if costatus(c) then
		  coresume(c)
		else
		  del(actions,c)
		end
	end)

	-- Input utils update MUST be done last
	input_utils:update()
end

function _draw()
	cls(0)

	map()
	for go in all(game_objects) do
		if go.draw != nil then
			go:draw()
		end
	end
end

-->8
-- game state

-- Trying out a way to keep track of which room we're in, loading vars according to room, limited number of moves, and resetting the room on fail

game_state = {
	room_number = 0,
	room_vars = {}
}

function restart_room()
	game_state.room_number -= 1
	next_room()
end

function reset_room_for_player2()
	-- reset objects to original position without resetting player -- used for the end of rewind
	levels[tostr(game_state.room_number)]()
end

function next_room()
	game_state.room_number += 1
	del(game_objects, player_list.player1)
	del(game_objects, player_list.player2)

	-- set vars, objects, player, and camera
	game_state.room_vars = room_vars_list[game_state.room_number]
	levels[tostr(game_state.room_number)]()
	player_list.player1 = spawn_player({x = game_state.room_vars.starting_position.x, y = game_state.room_vars.starting_position.y})
	camera(game_state.room_vars.camera_position.x, game_state.room_vars.camera_position.y)
end

-->8
-- the player
player_base = {}
function spawn_player(starting_position)
	local starting_target = {x=starting_position.x, y=starting_position.y}
	local player = player_base:new{
		position = starting_position,
		target = starting_target,
		is_moving = false,
		command_queue = {},
		current_command = 0,
		sprite_sequence = {051, 052, 051, 053},
		anim_speed = 8,
		last_move_time = 0,
		is_alive = true,
		remaining_steps = game_state.room_vars.total_steps
	}
	add(game_objects, player)
	return player
end

function player_base:rewind_time()
	return function() 
				printh(self)
				printh(self == nil)
				printh(self == player_list.player1)
				printh(self == player_list.player2)
				
				if self == nil then return end
				if self == player_list.player2 then restart_room() return end --if rewind is called but we've already died once, then restart the level
				self.is_alive = false
				self:undo_all_commands(
					function()
						local player2 = spawn_player({x = game_state.room_vars.starting_position.x, y = game_state.room_vars.starting_position.y})
						player_list.player2 = player2
						reset_room_for_player2()
					end)
			end
end

function player_base:new (o)
	-- Instantiate a new player
    o = o or {}
    setmetatable(o, self) -- This is basically how you do classes in lua, brilliant :)
    self.__index = self
    return o
end

function player_base:get_sprite_sequence()
	if self.is_alive then
		return {48,49,50}
	end
	return {51,52,53}
end

function player_base:update()
	if self.is_moving == false then
		-- handle input
		local command = nil
		if self.is_alive then
			if input_utils:get_button_down(fire2) then
				input_utils:handle_hold_button(fire2, 0.5, self:rewind_time())
			end

			-- don't let them move too quickly
			if(self.last_move_time + 0.133 > time()) then
				return
			end

			if input_utils:get_button_down(fire1) then
				-- idle button - still want to limit pressing this too quickly and tick_command I think
				self.last_move_time = time()
				tick_command()
			end

			if input_utils:get_button_down(up) then
				command = self:create_move_command(up)
			end
			if input_utils:get_button_down(down) then
				command = self:create_move_command(down)
			end
			if input_utils:get_button_down(left) then
				command = self:create_move_command(left)
			end
			if input_utils:get_button_down(right) then
				command = self:create_move_command(right)
			end
		end
		
		if (command != nil) then
			self.last_move_time = time()
			self.command_queue[self.current_command] = command
			self.command_queue[self.current_command].execute()
			self.current_command += 1
			tick_command()

			-- limit number of steps, force rewind if step limit is reached
			--if (self == player_list.player2 or player_list.player2 == nil) then
				self.remaining_steps -= 1
				printh("remaining steps: "..tostr(self.remaining_steps))
				if (self.remaining_steps <= 0) then
					self:rewind_time()()
				end
			--end
		end

		if(not self:is_at_target()) then
			self.is_moving = true
		end
	end

	if self.is_moving then
		self:move_towards_target()
	end
end

function player_base:is_at_target()
	return self.position.x == self.target.x and self.position.y == self.target.y
end

function player_base:create_move_command(direction)
	local direction_map = {}
	direction_map[up] = {x=0, y=-8}
	direction_map[down] = {x=0, y=8}
	direction_map[left] = {x=-8, y=0}
	direction_map[right] = {x=8, y=0}

	local movement = direction_map[direction]
	local command = {}
	function command.execute() 	
		newX = self.target.x + movement.x
		newY = self.target.y + movement.y
		if not check_for_collision(pixel_to_grid({x = newX, y = newY})) then
			self.target.x = newX
			self.target.y = newY
			command.success = true
		end
	end

	function command.unexecute()
		if not (self.command_queue[self.current_command-1].success == nil) 
		and self.command_queue[self.current_command-1].success then
			self.target.x -= movement.x
			self.target.y -= movement.y
		end
	end

	return command
end

function player_base:undo_all_commands(callback)
	local c = cocreate(function()
		self.last_move_time = time()
		while self.current_command > 0 do
			if(self.last_move_time < time() - 0.27) then
				self.command_queue[self.current_command - 1].unexecute()
				self.current_command -= 1
				self.last_move_time = time()
			else
				yield()
			end
		end
		if callback != nil then
			callback()
		end
	end)

	add(actions, c)
end

function player_base:move_towards_target()
	local c = cocreate(function()
	 	while not self:is_at_target() do
			if self.target.x > self.position.x then
				self.position.x += 1
			elseif self.target.x < self.position.x then
				self.position.x -= 1
			end

			if self.target.y > self.position.y then
				self.position.y += 1
			elseif self.target.y < self.position.y then
				self.position.y -= 1
			end
			yield()
		 end
		 self.is_moving = false
	end)

	add(actions, c)
end

function player_base:draw()
	spr(get_sprite_animated(self:get_sprite_sequence(), self.anim_speed), self.position.x, self.position.y)
end
-->8
-- utils
left,right,up,down,fire1,fire2=0,1,2,3,4,5
black,dark_blue,dark_purple,dark_green,brown,dark_gray,light_gray,white,red,orange,yellow,green,blue,indigo,pink,peach=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15

input_utils = {
	left = false,
	right = false,
	up = false,
	down = false,
	fire1 = false,
	fire2 = false
}

function input_utils:update()
	self[left] = btn(left)
	self[right] = btn(right)
	self[up] = btn(up)
	self[down] = btn(down)
	self[fire1] = btn(fire1)
	self[fire2] = btn(fire2)
end

function input_utils:get_button_down(button)
	-- Returns true only in the frame that the button was pushed down
	return self[button] == false and btn(button)
end

function input_utils:get_button_up(button)
	-- Returns true only in the frame that the button was released
	return self[button] == true and not btn(button)
end

function input_utils:handle_hold_button(button, hold_time, success_function, update_function)
	-- Return true if the given button has been held down for the given amount of time
	local c = cocreate(
		function()
			start_time = time()
			while btn(button) and time() < (start_time + hold_time) do
				if update_function != nil then
					update_function()
				end
				yield()
			end
			if not btn(button) then
				return
			end
			success_function()
		end
	)
	add(actions, c)
end

-- grid functions
function grid_to_pixel(grid_position)
	return {x=grid_position.x * 8, y=grid_position.y * 8}
end

function pixel_to_grid(grid_position)
	return {x=(grid_position.x / 8), y=(grid_position.y / 8)}
end

collisionlayer = { 7 }

function check_for_collision(grid_position)
	local tile = mget(grid_position.x, grid_position.y);
	return fget(tile, collisionlayer[1])
end

function wait(duration)
	for i = 1,duration do
		flip()
	end
end

-->8
-- Interactables

-- door
door = {}
function create_door(pos, starting_state)
	local new_door = door:new{
		position = pos,
		is_open = starting_state,
		has_key = false,
		sprite = {133,134},
	}
	return new_door
end

function door:new (o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function door:init()
	if self != nil then
		mset(self.position.x, self.is_open and self.sprite[2] or self.sprite[1])
	end
end

function door:update()
	if self.has_key and is_open then return end -- don't let this door be shut if we have the key
	mset(self.position.x, self.position.y, self.is_open and self.sprite[2] or self.sprite[1]) -- works as a ternary operator, self.is_open ? self.sprite[1] : self.sprite[2], (order flipped)
end

-- pressure plate
pressure_plate = {}
function create_pressure_plate(pos, doors)
	local new_pressure_plate = pressure_plate:new{
		is_on = false,
		changed = true,
		position = pos,
		sprite = {184,185}, -- could have a sequence of active_sprites and inactive_sprites for anim 
		connected_doors = doors
	}
	return new_pressure_plate
end

function pressure_plate:new (o)
	o = o or {}
	setmetatable(o, self) 
	self.__index = self
	return o
end

function pressure_plate:init()
	mset(self.position.x, self.position.y, self.sprite[1])
end

function pressure_plate:update()
	local state = get_state(self.position)

	self.changed = (self.is_on and not state) or (state and not self.is_on)

	-- only update if the state has changed
	if (self.changed) then
		self.is_on = state
		if self.is_on then
			sfx(20)
		end

		for connected_door in all(self.connected_doors) do
			if connected_door.has_key then goto continue end 
			connected_door.is_open = not connected_door.is_open
			::continue::
		end

		mset(self.position.x, self.position.y, self.is_on and self.sprite[2] or self.sprite[1])
	end
end

-- pickup_key

pickup_key = {}
function create_pickup_key(pos, doors)
	local new_pickup_key = pickup_key:new{
		is_picked_up = false,
		position = pos,
		sprite = {176},
		connected_doors = doors,
	}
	return new_pickup_key
end

function pickup_key:new (o)
	o = o or {}
	setmetatable(o, self) 
	self.__index = self
	return o
end

function pickup_key:init()
	mset(self.position.x, self.position.y, self.sprite[1])
end

function pickup_key:update()
	if self.is_picked_up then return end
	
	local state = get_state(self.position)

	if state then -- key is picked up
		self.is_picked_up = true

		for connected_door in all(self.connected_doors) do
			connected_door.is_open = true
			connected_door.has_key = true
		end

		mset(self.position.x, self.position.y, 160)
	end
end

-- toggle object

toggle_switch = {}
function create_toggle_switch(pos, doors)
	local new_toggle_switch = toggle_switch:new{
		is_active = false,
		is_player_here = false,
		position = pos,
		sprite = {184,185},
		connected_doors = doors,
	}
	return new_toggle_switch
end

function toggle_switch:new (o)
	o = o or {}
	setmetatable(o, self) 
	self.__index = self
	return o
end

function toggle_switch:init()
	mset(self.position.x, self.position.y, self.sprite[1])
end

function toggle_switch:update()
	local state = get_state(self.position)

	if state and not self.is_player_here then 
		--self.is_active = not self.is_active
		self.is_player_here = true
		for connected_door in all(self.connected_doors) do
			if connected_door.has_key then goto continue end 
			connected_door.is_open = not connected_door.is_open
			::continue::
		end

		mset(self.position.x, self.position.y, self.is_active and self.sprite[2] or self.sprite[1])

	elseif not state then
		self.is_player_here = false
	end
end

-- exit block, triggers next stage
exit_block = {}
function create_exit_block(pos, orientation)
	local new_exit_block = exit_block:new{
		position = pos,
		sprite = {140},
		orientation = orientation
	}
	return new_exit_block
end

function exit_block:new (o)
	o = o or {}
	setmetatable(o, self) 
	self.__index = self
	return o
end

function exit_block:init()
	mset(self.position.x, self.position.y, self.sprite[1] + self.orientation)
end

function exit_block:update()
	local state = false
	
	if (not (player_list.player2 == nil)) then
		local p2 = pixel_to_grid(player_list.player2.position)
		state = p2.x == self.position.x and p2.y == self.position.y
	end

	if state then
		-- we won, play sfx/anims, load the next stage
		music(-1)
		sfx(25)
		wait(20)
		music(2)
		printh("win")
		next_room()
	end
end

--- interactable utils

function get_state(position)
	local state = false

	-- check for player1 at this position
	if (not (player_list.player1 == nil)) then
		local p1 = pixel_to_grid(player_list.player1.position)
		state = p1.x == position.x and p1.y == position.y
	end

	-- check for player2
	if (not state and not (player_list.player2 == nil)) then
		local p2 = pixel_to_grid(player_list.player2.position)
		state = state or (p2.x == position.x and p2.y == position.y)
	end

	return state
end

-->8
-- Level management

level_loader = {}
levels = {}

-- player starting position and total steps allowed
room_vars_list = {
	{ starting_position = grid_to_pixel({x = 8, y = 3}), camera_position = {x = 0, y =0 },  total_steps = 20 }, -- room 1
	{ starting_position = grid_to_pixel({x = 24, y = 1}), camera_position = {x = 128, y = 0}, total_steps = 35} -- room 2 -- screen size is 128*128 pixels or 16*16 cells, must account for overall map location

}

levels["1"] = function()
	-- initialise animated map objects
	
	-- animated example

	-- local tree1 = {
	-- 	init = function() 
	-- 		add(animated_objects, {	position = {x = 4, y = 10}, -- celx, cely
	-- 								anim = animations["tree"]})
	-- 	end
	-- }

	-- create interactable objects

	-- examples
	-- local door1 = create_door({x = 7, y = 7}, false)
	-- local pressure_plate1 = create_pressure_plate({x = 3, y = 3}, { door1, door2 })
	-- local toggle_switch1 = create_toggle_switch({x = 2, y = 2}, { door1, door2, door3, door4 })
	-- local key1 = create_pickup_key({x = 1, y = 3}, { door1, door2 })
	-- local exit1 = create_exit_block({x = 8, y = 15}, 2)

	local door1 = create_door({x = 7, y = 7}, false)
	local door2 = create_door({x = 8, y = 7}, false)
	local pressure_plate1 = create_pressure_plate({x = 3, y = 3}, { door1, door2 })
	local pressure_plate2 = create_pressure_plate({x = 12, y = 3}, { door1, door2 })
	local exit1 = create_exit_block({x = 8, y = 15}, 2)

	-- add objects to level
	local level1 = {
		--tree1,
		door1,
		door2,
		pressure_plate1,
		pressure_plate2,
		exit1,
	}

	level_loader:load_level_objects(level1)
end

levels["2"] = function()

	local door1 = create_door({x = 25, y = 3}, false)
	local door2 = create_door({x = 23, y = 5}, false)
	local door3 = create_door({x = 24, y = 5}, false)

	local key1 = create_pickup_key({x = 18, y = 12}, { door1 })
	local key2 = create_pickup_key({x = 29, y = 2}, { door2, door3 })

	local exit1 = create_exit_block({x = 23, y = 15}, 2)
	local exit2 = create_exit_block({x = 24, y = 15}, 2)

	-- add objects to level
	local level2 = {
		door1,
		door2,
		door3,
		key1,
		key2,
		exit1,
		exit2
	}

	level_loader:load_level_objects(level2)
end

function level_loader:load_level_objects(level_objects)
	self:unload_level_objects()
	self.current_level = level_objects
	for go in all(level_objects) do
		go:init()
		add(game_objects, go)
	end
end

function level_loader:unload_level_objects()
	if self.current_level == nil then return end
	for go in all(self.current_level) do
		go:init()
		del(game_objects, go)
	end
end

function init_animations()

	-- define animated sprites
	animations["tree"] = {
		sprite_sequence = {64, 66},
		sprite_size = {x = 2, y = 2},
		speed = 1.5
	}

	animations["keycard"] = {
		sprite_sequence = {181, 182, 183, 182},
		sprite_size = {x = 1, y = 1},
		speed = 4
	}

	return animations
end

function animator:update()
	for obj in all(animated_objects) do
		local sprite_this_frame = get_sprite_animated(obj.anim.sprite_sequence, obj.anim.speed)
		for i = 0,obj.anim.sprite_size.x-1 do
			for j = 0,obj.anim.sprite_size.y-1 do
				mset(obj.position.x + i, obj.position.y + j, sprite_this_frame  + (i + j*16))
			end
		end
	end
end

function get_sprite_animated(frames, speed)
 	return frames[flr(time()*speed % #frames) + 1]
end

-->8
-- command ticker
function tick_command() 
	-- tick command will make player 1 move if they exist and are dead
	local player1 = player_list.player1
	if player1 != nil and not player1.is_alive then
		-- if current command + 1 is still a thing
		local command_to_run = player1.command_queue[player1.current_command]
		if command_to_run == nil then return end
		command_to_run.execute()
		player1.current_command += 1
	end
end

__gfx__
00088880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee0000000000000000
00080000000550000500005005000050005555000000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00080000005555000050050000500500005555000000000000000000000000000000000000000000000000000000000000000000e000000e0000000000000000
00088880055555500005500000055000055050500000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00080000000550000005500000055000055555500000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00080000000550000050050000055000055555500000000000000000000000000000000000000000000000000000000000000000e000000e0000000000000000
00080000000550000500005000055000005050500000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00088880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee0000000000000000
00000000000000000000000000000000000000000000000000000000555555555555555555555555777777777777777777777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000555555555555555555555555700000000000000000000007000000000000000000000000
00000000000000000000000000000000000000000000000000000000555555555555555555555555700666666666666666666007000000000000000000000000
00000000000000000000000000000000000000000000000000000000555555555555555555555555706666666666666666666607000000000000000000000000
00000000000000000000000000000000000000000000000000000000555566666666666666665555706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000000555566666666666666665555706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000000555566000000000000665555706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000000555566077777777770665555706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000000555566076666666670665555706655557777777755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000000555566076655556670665555706655557755557755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000000555566076566665670665555706655557566665755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000000555566076560065670665555706655557560065755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000000555566076560065670665555706655557560065755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000000555566076566665670665555706655557566665755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000000555566076655556670665555706655557755557755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000000555566076666666670665555706655557777777755556607666666660000000000000000
ee7777eeee7777eeeeeeeeeeee0000eeee0000eeeeeeeeee00000000555566077777777770665555706655555555555555556607000000000000000000000000
e777777ee777777eee7777eee000000ee000000eee0000ee00000000555566000000000000665555706655555555555555556607000000000000000000000000
e777676ee777676ee777777ee000707ee000707ee000000e00000000555566666666666666665555706655555555555555556607000000000000000000000000
e777777ee777777ee777676ee000000ee000000ee000707e00000000555566666666666666665555706655555555555555556607000000000000000000000000
e777777ee777777ee777777ee000000ee000000ee000000e00000000555555555555555555555555706666666666666666666607000000000000000000000000
e777777ee777777ee777777ee000000ee000000ee000000e00000000555555555555555555555555700666666666666666666007000000000000000000000000
e7eeee7ee7eeee7eee7ee7eeee0ee0eee0eeee0eee0ee0ee00000000555555555555555555555555700000000000000000000007000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000555555555555555555555555777777777777777777777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000003bbbbb00000000003bbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00003bbbbbb0000000003bbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00bb3bbbbbbbb00000bbbbbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333bbbbbb0003333333bb33bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333bb333bbbbb3003333b333bb33b300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03bbbbb33bb3b3b003bbbbb33bb333b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00b333bb3b33333000b333bb3b3333b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333b333bbb303333333b333bbb30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0333353333bbbb300333333333b33b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000554333333b300033354334333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444440333000000544444033300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005544440000000000554444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00055544444000000005554444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00055545444000000005554544400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005445540000000000544554000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000004444000000000000333300000000005666666556666665000000000000000000000000000000008880808077777777665000076666666666500007
0000000004445440400000000334b330300000005077000550666605000000000000000000000000000000008000080000000000656500075666665665650007
00000000545454544000000033344b4b3b0000005066660550666605000000000000000000000000000000008880808000050500665050070565656566505007
00000000545454544000000034345444400000005070070650666657000000000000000000000000000000008000000000505050666505075056505066650507
0000000054549a444a00000054b49a544a0000005066660550666650000000000000000000000000000000008880808005056505665650070505050066565007
00000000545499444900000054549954490000005077070750666656000000000000000000000000000000000000008856565650666505070050500066650507
00000000544450544000000054344054300000005066660550666605000000000000000000000000000000000000808065666665665050070000000066505007
00000000555444445000000053b535445b0000005070070550666605000000000000000000000000000000000000808866666666650500077777777765050007
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077757577000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077575757000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000075756575000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056565657000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065666665000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066666666000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6665766600000000000000000000000000a0a0a000a0a0a000a0a0a000a0a0a0555555555555555500000000000000000009a0000009a00a0a09a0a00909a000
66557666000000000000000000000000009c9c90009c9c90009c9c90009c9c90566777755660000500000000000000000099a0009099a0a00099a0000099a009
660556660000000000000000000000000111111001111110011111100111111056666675566666050000000000000000004990000049900000499090004990a0
66665666000000000000000000000000011111100111111001111110011111105066667557666605000000000000000000009000a000900a9000900000009000
66555766000000000000000000000000057777500577bb50057bb75005bb77505066667557666605000000000000000000999a0000999a0000999a0000999a09
605555760000000000000000000000000555005005550050055500500555805050666665576666650000000000000000049999a0049999a0049999a0a49999a0
605665760000000000000000000000000555555005555550055555500555555050000665577776650000000000000000049009a0049009a0049009a0049009a0
66055566000000000000000000000000000055500000555000005550000055505555555555555555000000000000000000499900a04999000049990a00499900
__label__
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888ffffff882222228888888888888888888888888888888888888888888888888888888888888888228228888228822888fff8ff888888822888888228888
88888f8888f882888828888888888888888888888888888888888888888888888888888888888888882288822888222222888fff8ff888882282888888222888
88888ffffff882888828888888888888888888888888888888888888888888888888888888888888882288822888282282888fff888888228882888888288888
88888888888882888828888888888888888888888888888888888888888888888888888888888888882288822888222222888888fff888228882888822288888
88888f8f8f8882888828888888888888888888888888888888888888888888888888888888888888882288822888822228888ff8fff888882282888222288888
888888f8f8f882222228888888888888888888888888888888888888888888888888888888888888888228228888828828888ff8fff888888822888222888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd1111dd0660dd1111
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667777777777666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667666666667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667666666667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667616666667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667171666667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667177166667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667177716667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667177771667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667177116667666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666667711717777666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665555660770665555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
555555555555575555555ddd55555d5d5d5d55555d5d555555555d5555555ddd5555550000000055555555555555555555555555555555555555555555555555
555555555555777555555ddd55555555555555555d5d5d55555555d55555d555d555550000000056666666666666555557777755555555555555555555555555
555555555557777755555ddd55555d55555d55555d5d5d555555555d555d55555d55550000000056ddd6ddd6ddd6555577ddd775566666555666665556666655
555555555577777555555ddd55555555555555555ddddd5555ddddddd55d55555d55550000000056d6d666d6d6d6555577d7d77566dd666566ddd66566ddd665
5555555557577755555ddddddd555d55555d555d5ddddd555d5ddddd555d55555d55550000000056d6d66dd6ddd6555577d7d775666d66656666d665666dd665
5555555557557555555d55555d55555555555555dddddd555d55ddd55555d555d555550000000056d6d666d666d6555577ddd775666d666566d666656666d665
5555555557775555555ddddddd555d5d5d5d555555ddd5555d555d5555555ddd5555550000000056ddd6ddd666d655557777777566ddd66566ddd66566ddd665
55555555555555555555555555555555555555555555555555555555555555555555550000000056666666666666555577777775666666656666666566666665
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555566666665ddddddd5ddddddd5ddddddd5
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee0000000000000000
00080000000550000500005005000050005555000000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00080000005555000050050000500500005555000000000000000000000000000000000000000000000000000000000000000000e000000e0000000000000000
00088880055555500005500000055000055050500000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00080000000550000005500000055000055555500000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00080000000550000050050000055000055555500000000000000000000000000000000000000000000000000000000000000000e000000e0000000000000000
00080000000550000500005000055000005050500000000000000000000000000000000000000000000000000000000000000000ee0ee0ee0000000000000000
00088880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeee0000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000777777777777777777777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000007000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000700666666666666666666007000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000706666666666666666666607000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000007777777777000000000000000706655555555555555556607000000000000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557777777755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557755557755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557566665755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557560065755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557560065755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557566665755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557755557755556607666666660000000000000000
00000000000000000000000000000000000000000000000000000007000000007000000000000000706655557777777755556607666666660000000000000000
ee7777eeee7777eeeeeeeeeeee0000eeee0000eeeeeeeeee00000007777777777000000000000000706655555555555555556607000000000000000000000000
e777777ee777777eee7777eee000000ee000000eee0000ee00000000000000000000000000000000706655555555555555556607000000000000000000000000
e777676ee777676ee777777ee000707ee000707ee000000e00000000000000000000000000000000706655555555555555556607000000000000000000000000
e777777ee777777ee777676ee000000ee000000ee000707e00000000000000000000000000000000706655555555555555556607000000000000000000000000
e777777ee777777ee777777ee000000ee000000ee000000e00000000000000000000000000000000706666666666666666666607000000000000000000000000
e777777ee777777ee777777ee000000ee000000ee000000e00000000000000000000000000000000700666666666666666666007000000000000000000000000
e7eeee7ee7eeee7eee7ee7eeee0ee0eee0eeee0eee0ee0ee00000000000000000000000000000000700000000000000000000007000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000777777777777777777777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88282888882228228822888888282888882228228822288888888888888888888888888888888888888888888888888888888888888888888888888888888888
88282882882828828882888888282882882828828888288888888888888888888888888888888888888888888888888888888888888888888888888888888888
88828888882828828882888888222888882828828882288888888888888888888888888888888888888888888888888888888888888888888888888888888888
88282882882828828882888888882882882828828888288888888888888888888888888888888888888888888888888888888888888888888888888888888888
88282888882228222822288888222888882228222822288888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888

__gff__
0000808080000000000000000000000000008080800000808080808080000000000080808000008080808080800000000000000000000080808080808000000000000000000000000000000000000000808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1a1b1b1b1b1b1b1b1b1b1b1b1b1b1b1c1a1b1b1b1b1b1b8c8c1b1b1b1b1b1b1c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2c2a2d2d2d2d2d2d2d2d1718181818192c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2c2a2d2d2d2d2d2d2d2d27282d2db0292c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2db8a02d2da0a02d2da0b82d2d2c2a2d2d2d2d2d2d2d2d852d2d2d28292c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2da0a02d2da0a02d2da0a02d2d2c2a2d2d2d2d2d2d2d2d3738383838392c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2da02d2d2da0a02da02d2d2da02d2c2a1718a018181985851718181818192c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2da0a0a0a0a0a0a0a0a0a0a0a0a02c2a27282d2828292d2d271a383838392c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a17181818181985851718181818192c2a272d2d2d2d292d2d27292d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a3738383838392d2d3738383838392c2a272d2d2d2d292d2d27292d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2aa0a0a0a0a0a0a0a0a0a0a0a02da02c2a272d2d2d2d292d2d27292d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2d2d2d2d2da0a0a0a0a0a0a0a02c2a27282d2d2d292d2d27292d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2d1a1c2d2da0a02d2d1a1c2d2d2c2a272d2d2d2d292d2d27292d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2d3a3c2d2da0a02d2d3a3c2d2d2c2a27b02d2d2d292d2d27292d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2d2d2d2d2d2da02d2d2d2d2d2d2c2a27282d2d28292d2d27292d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2c2a3738383838392d2d37392d2d2d2d2c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3a3b3b3b3b3b3b3b8e3b3b3b3b3b3b3c3a3b3b3b3b3b3b8e8e3b3b3b3b3b3b3c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000800000e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e7500e750
001400000c7400c7400c7400c7400c7400c7400c7400c7400c7400c7400c7400c7400c7400c7400c7400c74009740097400974009740097400974009740097400974009740097400974009740097400974009740
00140000217402174021740217402174021740217402174021740217402174021740217402174021740217401c7401c7401c7401c7401c7401c7401c7401c7401c7401c7401c7401c7401c7401c7401c7401c740
00140000107401074010740107401074010740107401074010740107401074010740107401074010740107400e7400e7400e7400e7400e7400e7400e7400e7400e7400e7400e7400e7400e7400e7400e7400e740
001400201f7401f7401f7401f7401f7401f7401f7401f7401f7401f7401f7401f7401f7401f7401f7401f7401e7401e7401e7401e7401e7401e7401e7401e7401e7401e7401e7401e7401e7401e7401e7401e740
21140000215501c5522450024550000000000018552175000000015552000000000000000000000000000000215501c55224500245500000000000235541f5521a5521a5001c5501850000000000000000000000
21140000215501c552245002455000000000001a552005000000018552000000000015552155000000000000215501c5522450024550000000000023550215521f55201502185002150021550215552150021500
00140000006300c6003f6153f600256201c6003f615000000060000000006300000025620006003f61500000006300c6003f6153f600256201c6003f615126100060000000006300000025620006003f61500000
01140000006300c600076003f600256201c60000000000000060000000006300000025620006000000000000006300c600076003f600256201c60000000000000060000000006300000025620006001e62012610
49140000006403f6153f6153f615256303f6153f6153f6153f6153f615006403f615256303f6153f6153f615006403f6153f6153f615256303f6153f615126103f6153f615006403f615256303f6153f6153f615
49140000006403f6153f6153f615256303f6153f6153f6153f6153f615006403f615256303f6153f6153f615006403f6153f6153f615256303f6153f615126103f6153f615006403f615256303f6153f6153f615
001400000074500745007450074500745007450074500745007450074500745007450074500745007450074509745097450974509745097450974509745097450974509745097450974509745097450974509745
18140000217452174521745217452174521745217452174521745217452174521745217452174524745237451c7451c7451c7451c7451c7451c7451c7451c7451c7451c7451c7451c7451c7451c745187451a745
181400000474504745047450474504745047450474504745047450474504745047450474504745047450474502745027450274502745027450274502745027450274502745027450274502745027450274502745
001400001f7451f7451f7451f7451f7451f7451f7451f7451f7451f7451f7451f7451f7451f74523745217451e7451e7451e7451e7451e7451e7451e7451e7451e7451e7451e7451e7451e7451e7451a7451c745
00140000006300c6003f6053f600256201c6003f605000000060000000006300000025620006003f60500000006300c6003f6053f600256201c6003f605126100060000000006300000025620006003f60500000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
90030000106141a6201f63021640226401d630166200f6150c6000660003605006000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
540300001855021530245302d53032540345403955000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
910200002d35421355000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006
111400000015100150011500015000150001530010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
5d08000016750187501b7501d7501f7502275027750297502b7502b7502b7502b75026750267502675026750277502775027750277553370035700377002e700307003370035700377003a7003c7000070000700
91020000016140461607616096160b6260e6261162613626166261b6361f6362263626636296362c636306363363635636326362e63629636226361c6361762612626106260d6260a62607616036160161600615
__music__
01 01020f45
00 03040f46
00 01020f05
00 03040806
00 0b0c0955
00 0d0e0a58
00 0b0c0905
00 0d0e0a06
00 0b020745
02 0d040746


pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
-- main
-- The loop
game_objects = {}
actions = {}

function _update()
	for go in all(game_objects) do
		go:update()
	end
	for c in all(actions) do
		if costatus(c) then
		  coresume(c)
		else
		  del(actions,c)
		end
	  end
end

function _draw()
	cls(0)
	for go in all(game_objects) do
		go:draw()
	end
end
-->8
-- The player
player = {
	position = {x=8,y=8}, -- In pixel space
	target = {x=8,y=8}, -- In pixel space
	is_moving = false,
}

add(game_objects, player)

function player:update()
	if self.is_moving == false then
		if(btn(up)) then
			self.target.y -= 8
		end
		if(btn(down)) then
			self.target.y += 8
		end
		if(btn(left)) then
			self.target.x -= 8
		end
		if(btn(right)) then
			self.target.x += 8
		end

		if(not self:is_at_target()) then
			if (check_for_collision(pixel_to_grid(self.target))) then
				self.target.x = self.position.x
				self.target.y = self.position.y
			else
				self.is_moving = true
			end
		end
	end

	if self.is_moving then
		self:move_towards_target()
	end
end

function player:is_at_target()
	return self.position.x == self.target.x and self.position.y == self.target.y
end

function player:move_towards_target()
	local c = cocreate(function()
	 	while not self:is_at_target() do
			if self.target.x > self.position.x then
				self.position.x += 1
			elseif self.target.x < self.position.x then
				self.position.x -= 1
			end

			if self.target.y > self.position.y then
				self.position.y += 1
			elseif self.target.y < self.position.y then
				self.position.y -= 1
			end
			yield()
		 end
		 self.is_moving = false
	end)

	add(actions, c)
end

function player:draw()
	spr(001, self.position.x, self.position.y)
	map()
end

-->8
-- utils
left,right,up,down,fire1,fire2=0,1,2,3,4,5
black,dark_blue,dark_purple,dark_green,brown,dark_gray,light_gray,white,red,orange,yellow,green,blue,indigo,pink,peach=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15

-- grid functions
function grid_to_pixel(grid_position)
	return {x=grid_position.x * 8, y=grid_position.y * 8}
end

function pixel_to_grid(grid_position)
	return {x=(grid_position.x / 8), y=(grid_position.y / 8)}
end

--
collisionlayers = {7}

function check_for_collision(grid_position)
	printh("checking collision")
	local tile = mget(grid_position.x, grid_position.y);
	for i in all(collisionlayers) do
		if (fget(tile, i)) then
			printh("collision detected")
			return true;
		end
	end
	return false;
end

__gfx__
0000000000aaaa004449999400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa09000940400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000009a0aa0aa9444940400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000009aaaaaaa9090040900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000009a0000aa9040090900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000009a0000aa4049444900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000009a000a04049000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009999004999944400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000002020202020202000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000002020202020202000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000202000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000202000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
